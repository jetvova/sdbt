// @generated
// This file was automatically generated by extracting instruction names, parameters, and bit
// patterns from the Armv8-A 2020-12, A64 Instruction Set Architecture documentation provided 
// in XML format. I believe this consitutes fair use for research and educational purposes.
// https://developer.arm.com/architectures/cpu-architecture/a-profile/exploration-tools

// Please note that the A64 instruction set is property and copyrighted material of Arm Ltd.

#![rustfmt::skip]

#[allow(non_camel_case_types)]
#[derive(Debug, Clone, PartialEq, Eq)]
pub enum Instruction {
	{{~#each instructions}}
    {{name}},
  	{{~/each}}
    UNKNOWN(u32),
}

impl Instruction {
    // Primitive decoding mechanism through repetetive if checking. To be improved later
    pub fn decode(opcode: u32) -> Self {
        {{~#each instructions}}
        if opcode & {{hex immutable_bits}} == {{hex identification}} {
            return Self::{{name}};
        }
        {{~/each}}
        
        Self::UNKNOWN(opcode)
    }

    pub fn encode(&self) -> u32 {
        match self {
            {{~#each instructions}}
            Self::{{name}} => {{hex identification}},
            {{~/each}}
            
            Self::UNKNOWN(opcode) => *opcode,
        }
    }
}